{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\NewProject.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\NewProject.vue","mtime":1555865420388},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { APIService } from \"../APIService\";\nvar apiService = new APIService();\nexport default {\n  name: \"newproject\",\n  checkbox: false,\n  data: function data() {\n    return {\n      ruleForm1: {\n        project_name: \"\",\n        public: \"\",\n        xml_file: \"\"\n      },\n      namesRules: {\n        project_name: [{\n          required: true,\n          message: \"Name is required\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    if (this.$route.params.xml_file != undefined) {\n      this.ruleForm1.xml_file = this.$route.params.xml_file;\n    }\n  },\n  methods: {\n    create: function create(formName) {\n      var _this = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var info = {\n            project_name: _this.ruleForm1.project_name,\n            public: _this.ruleForm1.public,\n            xml_file: _this.ruleForm1.xml_file\n          };\n          apiService.newProject(info).then(function (result) {\n            if (result.data.success) {\n              _this.$router.push({\n                name: \"project\",\n                params: {\n                  id: result.data.uri\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["NewProject.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAAA,UAAA,QAAA,eAAA;AACA,IAAA,UAAA,GAAA,IAAA,UAAA,EAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,QAAA,EAAA,KAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,SAAA,EAAA;AACA,QAAA,YAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OADA;AAMA,MAAA,UAAA,EAAA;AACA,QAAA,YAAA,EAAA,CACA;AACA,UAAA,QAAA,EAAA,IADA;AAEA,UAAA,OAAA,EAAA,kBAFA;AAGA,UAAA,OAAA,EAAA;AAHA,SADA;AADA;AANA,KAAA;AAgBA,GApBA;AAqBA,EAAA,OArBA,qBAqBA;AACA,QAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA,IAAA,SAAA,EAAA;AACA,WAAA,SAAA,CAAA,QAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,QAAA;AACA;AACA,GAzBA;AA0BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,kBACA,QADA,EACA;AAAA;;AACA,WAAA,KAAA,CAAA,QAAA,EAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,cAAA,IAAA,GAAA;AACA,YAAA,YAAA,EAAA,KAAA,CAAA,SAAA,CAAA,YADA;AAEA,YAAA,MAAA,EAAA,KAAA,CAAA,SAAA,CAAA,MAFA;AAGA,YAAA,QAAA,EAAA,KAAA,CAAA,SAAA,CAAA;AAHA,WAAA;AAKA,UAAA,UAAA,CAAA,UAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,gBAAA,MAAA,CAAA,IAAA,CAAA,OAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,gBAAA,IAAA,EAAA,SADA;AAEA,gBAAA,MAAA,EAAA;AAAA,kBAAA,EAAA,EAAA,MAAA,CAAA,IAAA,CAAA;AAAA;AAFA,eAAA;AAIA;AACA,WAPA;AAQA;AACA,OAhBA;AAiBA;AAnBA;AA1BA,CAAA","sourcesContent":["<template>\r\n  <v-app class=\"appContainer\">\r\n    <el-form\r\n      class=\"newform\"\r\n      :model=\"ruleForm1\"\r\n      :rules=\"namesRules\"\r\n      ref=\"ruleForm1\"\r\n      lazy-validation\r\n      style=\"margin-top:10%;\"\r\n    >\r\n      <el-form-item prop=\"project_name\">\r\n        <el-input\r\n          v-model=\"ruleForm1.project_name\"\r\n          placeholder=\"Name of the project\"\r\n          @keyup.enter.native=\"create('ruleForm1')\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-checkbox v-model=\"ruleForm1.public\" label=\"Public project\" name=\"type\"></el-checkbox>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button class=\"successB\" @click=\"create('ruleForm1')\">Create project</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"newproject\",\r\n  checkbox: false,\r\n  data() {\r\n    return {\r\n      ruleForm1: {\r\n        project_name: \"\",\r\n        public: \"\",\r\n        xml_file: \"\"\r\n      },\r\n      namesRules: {\r\n        project_name: [\r\n          {\r\n            required: true,\r\n            message: \"Name is required\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    if (this.$route.params.xml_file != undefined) {\r\n      this.ruleForm1.xml_file = this.$route.params.xml_file;\r\n    }\r\n  },\r\n  methods: {\r\n    create(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            project_name: this.ruleForm1.project_name,\r\n            public: this.ruleForm1.public,\r\n            xml_file: this.ruleForm1.xml_file\r\n          };\r\n          apiService.newProject(info).then(result => {\r\n            if (result.data.success) {\r\n              this.$router.push({\r\n                name: \"project\",\r\n                params: { id: result.data.uri }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/components"}]}