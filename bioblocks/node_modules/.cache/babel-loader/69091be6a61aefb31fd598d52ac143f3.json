{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Project.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Project.vue","mtime":1557588505584},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Bioblocks from \"./Bioblocks.vue\";\nimport { APIService } from \"../APIService\";\nvar apiService = new APIService();\nexport default {\n  name: \"project\",\n  components: {\n    Bioblocks: Bioblocks\n  },\n  data: function data() {\n    var validateGroup = function validateGroup(rule, value, callback) {\n      if (isNaN(value)) {\n        callback(new Error(\"Id must be a number\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      deleting: false,\n      editing: false,\n      isEditing: false,\n      alert: false,\n      alertAdd: false,\n      alertAddError: false,\n      alertEdit: false,\n      alertEditError: false,\n      timeout: 4000,\n      text: \"Project successfully saved\",\n      textAdd: \"User successfully added\",\n      textAddError: \"User does not exist or already added\",\n      textEdit: \"Project successfully saved\",\n      textEditError: \"Error saving the project\",\n      labelPosition: \"top\",\n      valid: true,\n      read: true,\n      ruleForm1: {\n        project_name: \"\",\n        project_group: \"\",\n        public: \"\"\n      },\n      namesRules: {\n        project_name: [{\n          required: true,\n          message: \"Name is required\",\n          trigger: \"blur\"\n        }],\n        project_group: [{\n          validator: validateGroup,\n          trigger: \"blur\"\n        }]\n      },\n      dataProject: {\n        dataid: \"\",\n        dataxml: \"\",\n        dataname: \"\",\n        datapublic: \"\",\n        dataproject_group: \"\",\n        isOwner: \"\"\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    apiService.getProject(this.$route.params.id).then(function (result) {\n      if (result.data != \"\") {\n        _this.dataProject.dataid = _this.$route.params.id;\n        _this.dataProject.dataxml = result.data.info.xml_file;\n        _this.dataProject.dataname = result.data.info.name;\n        _this.dataProject.datapublic = result.data.info.public == 1;\n        _this.dataProject.dataproject_group = result.data.info.project_group;\n        _this.dataProject.isOwner = result.data.isOwner;\n        _this.ruleForm1.project_name = result.data.info.name;\n        _this.ruleForm1.public = result.data.info.public == 1;\n      } else _this.$router.push(\"/newproject\");\n    });\n  },\n  methods: {\n    saveProject: function saveProject(info) {\n      var _this2 = this;\n\n      info.id_project = this.dataProject.dataid;\n      apiService.saveProject(info).then(function (result) {\n        if (result.data.success) {\n          _this2.alert = !_this2.alert;\n        }\n      });\n    },\n    deleteProject: function deleteProject() {\n      var _this3 = this;\n\n      var info = {\n        id_project: this.dataProject.dataid\n      };\n      apiService.deleteProject(info).then(function (result) {\n        if (result.data.success) {\n          _this3.$router.push(\"/newproject\");\n        }\n      });\n    },\n    editProject: function editProject(formName) {\n      var _this4 = this;\n\n      this.$refs[formName].validate(function (valid) {\n        if (valid) {\n          var info = {\n            id_project: _this4.dataProject.dataid,\n            name: _this4.ruleForm1.project_name,\n            public: _this4.ruleForm1.public,\n            project_group: _this4.ruleForm1.project_group\n          };\n          apiService.editProject(info).then(function (result) {\n            if (result.data.success) {\n              _this4.alertEdit = !_this4.alertEdit;\n              _this4.isEditing = !_this4.isEditing;\n            } else {\n              _this4.alertEditError = !_this4.alertEditError;\n            }\n          });\n        }\n      });\n    },\n    addUser: function addUser(info) {\n      var _this5 = this;\n\n      info.id_project = this.dataProject.dataid;\n      apiService.addUser(info).then(function (result) {\n        if (result.data.success) {\n          _this5.alertAdd = !_this5.alertAdd;\n        } else {\n          _this5.alertAddError = !_this5.alertAddError;\n        }\n      });\n    },\n    switchEdit: function switchEdit() {\n      this.editing = !this.editing;\n    }\n  }\n};",{"version":3,"sources":["Project.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-app style=\"position: relative; top: 7%;\">\r\n    <v-btn icon v-if=\"editing\" style=\"margin: 2%;\" @click=\"editing = !editing\">\r\n      <v-icon>first_page</v-icon>\r\n    </v-btn>\r\n    <el-form\r\n      v-if=\"editing\"\r\n      class=\"newform\"\r\n      :model=\"ruleForm1\"\r\n      :rules=\"namesRules\"\r\n      ref=\"ruleForm1\"\r\n      lazy-validation\r\n      style=\"margin-top:10%;\"\r\n    >\r\n      <el-form-item prop=\"project_name\">\r\n        <el-input\r\n          v-model=\"ruleForm1.project_name\"\r\n          @keyup.enter.native=\"create('ruleForm1')\"\r\n          :disabled=\"!isEditing\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"project_group\">\r\n        <el-input\r\n          v-model=\"ruleForm1.project_group\"\r\n          @keyup.enter.native=\"create('ruleForm1')\"\r\n          :disabled=\"!isEditing\"\r\n          placeholder=\"Id of the group related\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-checkbox\r\n          v-model=\"ruleForm1.public\"\r\n          label=\"Public project\"\r\n          name=\"type\"\r\n          :disabled=\"!isEditing\"\r\n        ></el-checkbox>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"!isEditing\">\r\n        <el-button class=\"successB\" @click=\"isEditing = !isEditing\" style=\"margin-right: 5%;\">Edit</el-button>\r\n        <el-button\r\n          class=\"danger\"\r\n          @click=\"deleting = !deleting\"\r\n          style=\"margin-left: 5%;\"\r\n        >Delete project</el-button>\r\n        <v-dialog v-model=\"deleting\" width=\"350px\">\r\n          <v-card style=\"height:250px;\">\r\n            <h1 style=\"font-size: 16px; padding: 10%;\">\r\n              Are you sure?\r\n              <br>Once deleted, the project can't be restored\r\n            </h1>\r\n            <div>\r\n              <el-button class=\"danger\" @click=\"deleteProject()\" style=\"margin-top: 5%;\">Delete</el-button>\r\n            </div>\r\n          </v-card>\r\n        </v-dialog>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"isEditing\">\r\n        <el-button\r\n          type=\"default\"\r\n          @click=\"isEditing = !isEditing; ruleForm1.project_name = dataProject.dataname; ruleForm1.public = dataProject.datapublic; ruleForm1.project_group = dataProject.dataproject_group;\"\r\n          style=\"margin-right: 5%;\"\r\n        >Cancel</el-button>\r\n        <el-button class=\"successB\" @click=\"editProject('ruleForm1')\" style=\"margin-left: 5%;\">Save</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <Bioblocks\r\n      v-show=\"!editing\"\r\n      :methodSave=\"saveProject\"\r\n      :methodAdd=\"addUser\"\r\n      :methodEdit=\"switchEdit\"\r\n      :dataxml=\"this.dataProject.dataxml\"\r\n      :isOwner=\"this.dataProject.isOwner\"\r\n    />\r\n    <v-snackbar color=\"green\" v-model=\"alert\" :timeout=\"timeout\">{{ text }}</v-snackbar>\r\n    <v-snackbar color=\"green\" v-model=\"alertAdd\" :timeout=\"timeout\">{{ textAdd }}</v-snackbar>\r\n    <v-snackbar color=\"red\" v-model=\"alertAddError\" :timeout=\"timeout\">{{ textAddError }}</v-snackbar>\r\n    <v-snackbar color=\"green\" v-model=\"alertEdit\" :timeout=\"timeout\">{{ textEdit }}</v-snackbar>\r\n    <v-snackbar color=\"red\" v-model=\"alertEditError\" :timeout=\"timeout\">{{ textEditError }}</v-snackbar>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport Bioblocks from \"./Bioblocks.vue\";\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"project\",\r\n  components: {\r\n    Bioblocks\r\n  },\r\n  data() {\r\n    var validateGroup = (rule, value, callback) => {\r\n      if (isNaN(value)) {\r\n        callback(new Error(\"Id must be a number\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      deleting: false,\r\n      editing: false,\r\n      isEditing: false,\r\n      alert: false,\r\n      alertAdd: false,\r\n      alertAddError: false,\r\n      alertEdit: false,\r\n      alertEditError: false,\r\n      timeout: 4000,\r\n      text: \"Project successfully saved\",\r\n      textAdd: \"User successfully added\",\r\n      textAddError: \"User does not exist or already added\",\r\n      textEdit: \"Project successfully saved\",\r\n      textEditError: \"Error saving the project\",\r\n      labelPosition: \"top\",\r\n      valid: true,\r\n      read: true,\r\n      ruleForm1: {\r\n        project_name: \"\",\r\n        project_group: \"\",\r\n        public: \"\"\r\n      },\r\n      namesRules: {\r\n        project_name: [\r\n          {\r\n            required: true,\r\n            message: \"Name is required\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        project_group: [\r\n          {\r\n            validator: validateGroup,\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      dataProject: {\r\n        dataid: \"\",\r\n        dataxml: \"\",\r\n        dataname: \"\",\r\n        datapublic: \"\",\r\n        dataproject_group: \"\",\r\n        isOwner: \"\"\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    apiService.getProject(this.$route.params.id).then(result => {\r\n      if (result.data != \"\") {\r\n        this.dataProject.dataid = this.$route.params.id;\r\n        this.dataProject.dataxml = result.data.info.xml_file;\r\n        this.dataProject.dataname = result.data.info.name;\r\n        this.dataProject.datapublic = result.data.info.public == 1;\r\n        this.dataProject.dataproject_group = result.data.info.project_group;\r\n        this.dataProject.isOwner = result.data.isOwner;\r\n        this.ruleForm1.project_name = result.data.info.name;\r\n        this.ruleForm1.public = result.data.info.public == 1;\r\n      } else this.$router.push(\"/newproject\");\r\n    });\r\n  },\r\n  methods: {\r\n    saveProject(info) {\r\n      info.id_project = this.dataProject.dataid;\r\n      apiService.saveProject(info).then(result => {\r\n        if (result.data.success) {\r\n          this.alert = !this.alert;\r\n        }\r\n      });\r\n    },\r\n    deleteProject() {\r\n      var info = {\r\n        id_project: this.dataProject.dataid\r\n      };\r\n      apiService.deleteProject(info).then(result => {\r\n        if (result.data.success) {\r\n          this.$router.push(\"/newproject\");\r\n        }\r\n      });\r\n    },\r\n    editProject(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            id_project: this.dataProject.dataid,\r\n            name: this.ruleForm1.project_name,\r\n            public: this.ruleForm1.public,\r\n            project_group: this.ruleForm1.project_group\r\n          };\r\n          apiService.editProject(info).then(result => {\r\n            if (result.data.success) {\r\n              this.alertEdit = !this.alertEdit;\r\n              this.isEditing = !this.isEditing;\r\n            } else {\r\n              this.alertEditError = !this.alertEditError;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    addUser(info) {\r\n      info.id_project = this.dataProject.dataid;\r\n      apiService.addUser(info).then(result => {\r\n        if (result.data.success) {\r\n          this.alertAdd = !this.alertAdd;\r\n        } else {\r\n          this.alertAddError = !this.alertAddError;\r\n        }\r\n      });\r\n    },\r\n    switchEdit() {\r\n      this.editing = !this.editing;\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.view {\r\n  border-color: transparent;\r\n  background-color: initial;\r\n  color: initial;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}