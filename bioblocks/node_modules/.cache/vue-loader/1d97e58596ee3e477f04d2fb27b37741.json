{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Register.vue","mtime":1555272080326},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"register\",\r\n  props: {\r\n    dataSuccessMessage: {\r\n      type: String\r\n    }\r\n  },\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password\"));\r\n      } else {\r\n        if (this.ruleForm1.checkPass !== \"\") {\r\n          callback();\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password again\"));\r\n      } else if (value !== this.ruleForm1.pass) {\r\n        callback(new Error(\"The inputs don't match!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      alert: false,\r\n      timeout: 0,\r\n      text: \"Credentials already existing\",\r\n      labelPosition: \"top\",\r\n      ruleForm1: {\r\n        fullName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        userType: \"\",\r\n        pass: \"\",\r\n        checkPass: \"\"\r\n      },\r\n      rules1: {\r\n        fullName: [\r\n          { required: true, message: \"Please input Full name\", trigger: \"blur\" }\r\n        ],\r\n        username: [\r\n          { required: true, message: \"Please input Username\", trigger: \"blur\" }\r\n        ],\r\n        userType: [\r\n          { required: true, message: \"Please input User type\", trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"Please input Email\", trigger: \"blur\" },\r\n          {\r\n            type: \"email\",\r\n            message: \"Please input correct email address\",\r\n            trigger: [\"blur\", \"change\"]\r\n          }\r\n        ],\r\n        pass: [{ validator: validatePass, trigger: \"blur\" }],\r\n        checkPass: [{ validator: validatePass2, trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    signUp(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            fullName: this.ruleForm1.fullName,\r\n            username: this.ruleForm1.username,\r\n            password: this.ruleForm1.pass,\r\n            email: this.ruleForm1.email,\r\n            userType: this.ruleForm1.userType\r\n          };\r\n          apiService.signUp(info).then(result => {\r\n            if (result.data.success) {\r\n              this.$router.push(\"login\");\r\n            } else if (!this.alert) {\r\n              this.alert = !this.alert;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"login-form\" style=\"margin-top: 5%;\">\r\n    <div class=\"login-border\">\r\n      <h2>Register</h2>\r\n      <div class=\"login-width\">\r\n        <el-form\r\n          :model=\"ruleForm1\"\r\n          status-icon\r\n          :rules=\"rules1\"\r\n          ref=\"ruleForm1\"\r\n          label-width=\"120px\"\r\n          class=\"demo-ruleForm1\"\r\n          :label-position=\"labelPosition\"\r\n        >\r\n          <el-form-item label=\"Full name\" prop=\"fullName\">\r\n            <el-input v-model=\"ruleForm1.fullName\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Username\" prop=\"username\">\r\n            <el-input v-model=\"ruleForm1.username\" placeholder=\"username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Email\" prop=\"email\">\r\n            <el-input v-model=\"ruleForm1.email\" placeholder=\"you@example.com\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"User type\" prop=\"userType\">\r\n            <el-select v-model=\"ruleForm1.userType\">\r\n              <el-option label=\"Student\" value=\"student\"></el-option>\r\n              <el-option label=\"Professor\" value=\"professor\"></el-option>\r\n              <el-option label=\"Standard\" value=\"standard\"></el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n          <el-form-item label=\"Password\" prop=\"pass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm1.pass\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"Confirm\" prop=\"checkPass\">\r\n            <el-input type=\"password\" v-model=\"ruleForm1.checkPass\" autocomplete=\"off\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"success\" @click=\"signUp('ruleForm1')\">Sing Up</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n    <v-snackbar v-model=\"alert\" :timeout=\"timeout\">\r\n      {{ text }}\r\n      <v-btn dark flat @click=\"alert = false\">Close</v-btn>\r\n    </v-snackbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"register\",\r\n  props: {\r\n    dataSuccessMessage: {\r\n      type: String\r\n    }\r\n  },\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password\"));\r\n      } else {\r\n        if (this.ruleForm1.checkPass !== \"\") {\r\n          callback();\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password again\"));\r\n      } else if (value !== this.ruleForm1.pass) {\r\n        callback(new Error(\"The inputs don't match!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      alert: false,\r\n      timeout: 0,\r\n      text: \"Credentials already existing\",\r\n      labelPosition: \"top\",\r\n      ruleForm1: {\r\n        fullName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        userType: \"\",\r\n        pass: \"\",\r\n        checkPass: \"\"\r\n      },\r\n      rules1: {\r\n        fullName: [\r\n          { required: true, message: \"Please input Full name\", trigger: \"blur\" }\r\n        ],\r\n        username: [\r\n          { required: true, message: \"Please input Username\", trigger: \"blur\" }\r\n        ],\r\n        userType: [\r\n          { required: true, message: \"Please input User type\", trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"Please input Email\", trigger: \"blur\" },\r\n          {\r\n            type: \"email\",\r\n            message: \"Please input correct email address\",\r\n            trigger: [\"blur\", \"change\"]\r\n          }\r\n        ],\r\n        pass: [{ validator: validatePass, trigger: \"blur\" }],\r\n        checkPass: [{ validator: validatePass2, trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    signUp(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            fullName: this.ruleForm1.fullName,\r\n            username: this.ruleForm1.username,\r\n            password: this.ruleForm1.pass,\r\n            email: this.ruleForm1.email,\r\n            userType: this.ruleForm1.userType\r\n          };\r\n          apiService.signUp(info).then(result => {\r\n            if (result.data.success) {\r\n              this.$router.push(\"login\");\r\n            } else if (!this.alert) {\r\n              this.alert = !this.alert;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}