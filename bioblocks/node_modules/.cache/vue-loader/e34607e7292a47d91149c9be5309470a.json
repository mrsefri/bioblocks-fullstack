{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Login.vue","mtime":1555859892384},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"login\",\r\n  props: {\r\n    dataSuccessMessage: {\r\n      type: String\r\n    }\r\n  },\r\n  data() {\r\n    var validatePass3 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      alert: false,\r\n      timeout: 0,\r\n      text: \"Incorrect username/password\",\r\n      labelPosition: \"top\",\r\n      ruleForm: {\r\n        name: \"\",\r\n        pass: \"\"\r\n      },\r\n      rules3: {\r\n        name: [\r\n          {\r\n            required: true,\r\n            message: \"Please input Username or Email\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        pass: [{ validator: validatePass3, trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    signIn(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            username: this.ruleForm.name,\r\n            password: this.ruleForm.pass\r\n          }\r\n          apiService.signIn(info).then(result => {\r\n            if (result.data.success) {\r\n              this.$router.go(\"/profile\");\r\n            } else if (!this.alert) {\r\n              this.alert = !this.alert;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-app>\r\n    <div class=\"login-form\" style=\"padding-top: 2%\">\r\n      <div class=\"login-border\" style=\"display: block; margin-left: auto; margin-right: auto;\">\r\n        <h2>Login</h2>\r\n        <div class=\"login-width\">\r\n          <el-form\r\n            :model=\"ruleForm\"\r\n            status-icon\r\n            :rules=\"rules3\"\r\n            ref=\"ruleForm\"\r\n            label-width=\"120px\"\r\n            class=\"demo-ruleForm\"\r\n            :label-position=\"labelPosition\"\r\n          >\r\n            <el-form-item label=\"Username or Email\" prop=\"name\">\r\n              <el-input v-model=\"ruleForm.name\" @keyup.enter.native=\"signIn('ruleForm')\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Password\" prop=\"pass\">\r\n              <el-input type=\"password\" v-model=\"ruleForm.pass\" autocomplete=\"off\" @keyup.enter.native=\"signIn('ruleForm')\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n              <el-button type=\"success\" @click=\"signIn('ruleForm')\">Sing In</el-button>\r\n            </el-form-item>\r\n          </el-form>\r\n        </div>\r\n      </div>\r\n      <div class=\"form-log-reg\" style=\"padding-left: 0px\">\r\n        <a>\r\n          <router-link :to=\"{ name: 'register' }\">Create an account</router-link>\r\n        </a>\r\n      </div>\r\n      <v-snackbar v-model=\"alert\" :timeout=\"timeout\">\r\n        {{ text }}\r\n        <v-btn dark flat @click=\"alert = false\">Close</v-btn>\r\n      </v-snackbar>\r\n    </div>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"login\",\r\n  props: {\r\n    dataSuccessMessage: {\r\n      type: String\r\n    }\r\n  },\r\n  data() {\r\n    var validatePass3 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      alert: false,\r\n      timeout: 0,\r\n      text: \"Incorrect username/password\",\r\n      labelPosition: \"top\",\r\n      ruleForm: {\r\n        name: \"\",\r\n        pass: \"\"\r\n      },\r\n      rules3: {\r\n        name: [\r\n          {\r\n            required: true,\r\n            message: \"Please input Username or Email\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        pass: [{ validator: validatePass3, trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    signIn(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            username: this.ruleForm.name,\r\n            password: this.ruleForm.pass\r\n          }\r\n          apiService.signIn(info).then(result => {\r\n            if (result.data.success) {\r\n              this.$router.go(\"/profile\");\r\n            } else if (!this.alert) {\r\n              this.alert = !this.alert;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}