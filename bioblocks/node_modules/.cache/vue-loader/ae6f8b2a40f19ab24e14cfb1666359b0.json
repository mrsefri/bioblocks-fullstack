{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Group.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Group.vue","mtime":1557585643442},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"group\",\r\n  data() {\r\n    return {\r\n      deleting: false,\r\n      isEditing: false,\r\n      alertEdit: false,\r\n      alertEditError: false,\r\n      timeout: 4000,\r\n      textEdit: \"Group successfully saved\",\r\n      textEditError: \"Error saving the group\",\r\n      labelPosition: \"top\",\r\n      valid: true,\r\n      read: true,\r\n      ruleForm1: {\r\n        group_name: \"\"\r\n      },\r\n      namesRules: {\r\n        group_name: [\r\n          {\r\n            required: true,\r\n            message: \"Name is required\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      dataGroup: {\r\n        dataid: \"\",\r\n        dataname: \"\"\r\n      },\r\n      projects: []\r\n    };\r\n  },\r\n  mounted() {\r\n    apiService.getGroup(this.$route.params.id).then(result => {\r\n      if (result.data != \"\") {\r\n        this.dataGroup.dataid = this.$route.params.id;\r\n        this.dataGroup.dataname = result.data.name;\r\n        this.ruleForm1.group_name = result.data.name;\r\n      } else this.$router.push(\"/newgroup\");\r\n    });\r\n    apiService.AllMyProjects().then(result => {\r\n      for (var i = 0; i < result.data.length; i += 3) {\r\n        var threeItems = [];\r\n        for (var n = 0; n < 3; n++)\r\n          if (result.data[i + n] != null) threeItems.push(result.data[i + n]);\r\n        this.projects.push(threeItems);\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    editGroup(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            id_group: this.dataGroup.dataid,\r\n            name: this.ruleForm1.group_name\r\n          };\r\n          apiService.editGroup(info).then(result => {\r\n            if (result.data.success) {\r\n              this.alertEdit = !this.alertEdit;\r\n              this.isEditing = !this.isEditing;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteGroup() {\r\n      var info = {\r\n        id_group: this.dataGroup.dataid\r\n      };\r\n      apiService.deleteGroup(info).then(result => {\r\n        if (result.data.success) {\r\n          this.$router.push(\"/newgroup\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["Group.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Group.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <v-app class=\"appContainer\">\r\n    <el-form\r\n      class=\"newform\"\r\n      :model=\"ruleForm1\"\r\n      :rules=\"namesRules\"\r\n      ref=\"ruleForm1\"\r\n      lazy-validation\r\n      style=\"margin-top:10%;\"\r\n    >\r\n      <el-form-item prop=\"group_name\">\r\n        <el-input\r\n          v-model=\"ruleForm1.group_name\"\r\n          @keyup.enter.native=\"create('ruleForm1')\"\r\n          :disabled=\"!isEditing\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"!isEditing\">\r\n        <el-button class=\"successB\" @click=\"isEditing = !isEditing\" style=\"margin-right: 5%;\">Edit</el-button>\r\n        <el-button\r\n          class=\"danger\"\r\n          @click=\"deleting = !deleting\"\r\n          style=\"margin-left: 5%;\"\r\n        >Delete group</el-button>\r\n        <v-dialog v-model=\"deleting\" width=\"350px\">\r\n          <v-card style=\"height:250px;\">\r\n            <h1 style=\"font-size: 16px; padding: 10%;\">\r\n              Are you sure?\r\n              <br>Once deleted, the group can't be restored\r\n            </h1>\r\n            <div>\r\n              <el-button class=\"danger\" @click=\"deleteGroup()\" style=\"margin-top: 5%;\">Delete</el-button>\r\n            </div>\r\n          </v-card>\r\n        </v-dialog>\r\n      </el-form-item>\r\n      <el-form-item v-if=\"isEditing\">\r\n        <el-button\r\n          type=\"default\"\r\n          @click=\"isEditing = !isEditing; ruleForm1.group_name = dataGroup.dataname\"\r\n          style=\"margin-right: 5%;\"\r\n        >Cancel</el-button>\r\n        <el-button class=\"successB\" @click=\"editGroup('ruleForm1')\" style=\"margin-left: 5%;\">Save</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n\r\n    <div>\r\n      <div>\r\n        <span\r\n          style=\"font-size: 25px; color: #193157; padding: 0 10px; background-color: white;\"\r\n        >Projects of the group</span>\r\n      </div>\r\n      <v-container fluid>\r\n        <v-layout column>\r\n          <v-flex xs12>\r\n            <div class=\"resultContainer\">\r\n              <v-layout\r\n                v-for=\"threeProjects in projects\"\r\n                :key=\"threeProjects.length\"\r\n                align-center\r\n                justify-center\r\n                row\r\n              >\r\n                <div\r\n                  class=\"homeItem elevation-5\"\r\n                  v-for=\"project in threeProjects\"\r\n                  :key=\"project.id_project\"\r\n                  style=\"margin: 3%;\"\r\n                >\r\n                  <h1 style=\"margin-top:35%;\">\r\n                    <a\r\n                      style=\"color:#193157; text-decoration: none;\"\r\n                      :href=\"'/project/' + project.id_project\"\r\n                    >{{ project.name }}</a>\r\n                  </h1>\r\n                </div>\r\n              </v-layout>\r\n            </div>\r\n          </v-flex>\r\n        </v-layout>\r\n      </v-container>\r\n    </div>\r\n\r\n    <v-snackbar color=\"green\" v-model=\"alertEdit\" :timeout=\"timeout\">{{ textEdit }}</v-snackbar>\r\n    <v-snackbar color=\"red\" v-model=\"alertEditError\" :timeout=\"timeout\">{{ textEditError }}</v-snackbar>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"group\",\r\n  data() {\r\n    return {\r\n      deleting: false,\r\n      isEditing: false,\r\n      alertEdit: false,\r\n      alertEditError: false,\r\n      timeout: 4000,\r\n      textEdit: \"Group successfully saved\",\r\n      textEditError: \"Error saving the group\",\r\n      labelPosition: \"top\",\r\n      valid: true,\r\n      read: true,\r\n      ruleForm1: {\r\n        group_name: \"\"\r\n      },\r\n      namesRules: {\r\n        group_name: [\r\n          {\r\n            required: true,\r\n            message: \"Name is required\",\r\n            trigger: \"blur\"\r\n          }\r\n        ]\r\n      },\r\n      dataGroup: {\r\n        dataid: \"\",\r\n        dataname: \"\"\r\n      },\r\n      projects: []\r\n    };\r\n  },\r\n  mounted() {\r\n    apiService.getGroup(this.$route.params.id).then(result => {\r\n      if (result.data != \"\") {\r\n        this.dataGroup.dataid = this.$route.params.id;\r\n        this.dataGroup.dataname = result.data.name;\r\n        this.ruleForm1.group_name = result.data.name;\r\n      } else this.$router.push(\"/newgroup\");\r\n    });\r\n    apiService.AllMyProjects().then(result => {\r\n      for (var i = 0; i < result.data.length; i += 3) {\r\n        var threeItems = [];\r\n        for (var n = 0; n < 3; n++)\r\n          if (result.data[i + n] != null) threeItems.push(result.data[i + n]);\r\n        this.projects.push(threeItems);\r\n      }\r\n    });\r\n  },\r\n  methods: {\r\n    editGroup(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            id_group: this.dataGroup.dataid,\r\n            name: this.ruleForm1.group_name\r\n          };\r\n          apiService.editGroup(info).then(result => {\r\n            if (result.data.success) {\r\n              this.alertEdit = !this.alertEdit;\r\n              this.isEditing = !this.isEditing;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    deleteGroup() {\r\n      var info = {\r\n        id_group: this.dataGroup.dataid\r\n      };\r\n      apiService.deleteGroup(info).then(result => {\r\n        if (result.data.success) {\r\n          this.$router.push(\"/newgroup\");\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n"]}]}