{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Home.vue","mtime":1557585682790},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.el-button.successB {\r\n  background: #00d994;\r\n  border-color: #00d994;\r\n  border-radius: 20px;\r\n  color: #192440;\r\n  font-weight: bold;\r\n}\r\n.el-button:hover.successB {\r\n  background: #00d994;\r\n  border-color: #00d994;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.el-button.danger {\r\n  background: #f44336;\r\n  border-color: #f44336;\r\n  border-radius: 20px;\r\n  color: #192440;\r\n  font-weight: bold;\r\n}\r\n.el-button:hover.danger {\r\n  background: #f44336;\r\n  border-color: #f44336;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n",{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div style=\"height: 100%;\">\r\n    <div style=\"height: 100%;\">\r\n      <div class=\"landing-page\">\r\n        <div>\r\n          <h1>A new way to program, easy, simple and intuitive</h1>\r\n          <span\r\n            class=\"landing-text-big\"\r\n            style=\"position: relative; top:25%;\"\r\n          >With Bioblocks you will program with visual blocks, without needing to know code</span>\r\n          <span class=\"landing-text-big\" style=\"position: relative; margin-top:2%;\">\r\n            <el-button class=\"successB\" @click=\"showCard = !showCard\">Try Out!</el-button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <v-layout align-center justify-center row style=\"margin: 0 auto;\">\r\n        <div class=\"homeItem\" v-for=\"i in headers\" :key=\"i\" style=\"margin-top: 2%; margin: 3%;\">\r\n          <img :src=\"i.src\" width=\"50%\" height=\"50%\">\r\n          <h1 class=\"landing-text-headers\">{{ i.header }}</h1>\r\n          <span>{{ i.text }}</span>\r\n        </div>\r\n      </v-layout>\r\n    </div>\r\n\r\n    <v-dialog v-model=\"showCard\" width=\"300px\">\r\n      <v-card v-if=\"isLogin\" style=\"background: white;\">\r\n        <div class=\"login-border\" style=\"display: block; margin-left: auto; margin-right: auto;\">\r\n          <div class=\"login-width\">\r\n            <el-form\r\n              :model=\"ruleForm\"\r\n              status-icon\r\n              :rules=\"rules3\"\r\n              ref=\"ruleForm\"\r\n              label-width=\"120px\"\r\n              class=\"demo-ruleForm\"\r\n              :label-position=\"labelPosition\"\r\n            >\r\n              <el-form-item label=\"Username or Email \" prop=\"name\">\r\n                <el-input\r\n                  v-model=\"ruleForm.name\"\r\n                  placeholder\r\n                  @keyup.enter.native=\"signIn('ruleForm')\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"Password\" prop=\"pass\">\r\n                <el-input\r\n                  type=\"password\"\r\n                  v-model=\"ruleForm.pass\"\r\n                  autocomplete=\"off\"\r\n                  @keyup.enter.native=\"signIn('ruleForm')\"\r\n                ></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button class=\"successB\" @click=\"signIn('ruleForm')\">Sing In</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-log-reg\" style=\"padding-left: 0px\">\r\n          <a @click=\"isLogin = !isLogin\">Create an account</a>\r\n        </div>\r\n      </v-card>\r\n\r\n      <v-card v-if=\"!isLogin\" style=\"background: white;\">\r\n        <div class=\"login-border\">\r\n          <div class=\"login-width\">\r\n            <el-form\r\n              :model=\"ruleForm1\"\r\n              status-icon\r\n              :rules=\"rules1\"\r\n              ref=\"ruleForm1\"\r\n              label-width=\"120px\"\r\n              class=\"demo-ruleForm1\"\r\n              :label-position=\"labelPosition\"\r\n            >\r\n              <el-form-item label=\"Full name\" prop=\"fullName\">\r\n                <el-input v-model=\"ruleForm1.fullName\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"Username\" prop=\"username\">\r\n                <el-input v-model=\"ruleForm1.username\" placeholder=\"username\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"Email\" prop=\"email\">\r\n                <el-input v-model=\"ruleForm1.email\" placeholder=\"you@example.com\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"User type\" prop=\"userType\">\r\n                <el-select v-model=\"ruleForm1.userType\">\r\n                  <el-option label=\"Student\" value=\"student\"></el-option>\r\n                  <el-option label=\"Professor\" value=\"professor\"></el-option>\r\n                  <el-option label=\"Standard\" value=\"standard\"></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n              <el-form-item label=\"Password\" prop=\"pass\">\r\n                <el-input type=\"password\" v-model=\"ruleForm1.pass\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item label=\"Confirm\" prop=\"checkPass\">\r\n                <el-input type=\"password\" v-model=\"ruleForm1.checkPass\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button class=\"successB\" @click=\"signUp('ruleForm1')\">Sing Up</el-button>\r\n              </el-form-item>\r\n            </el-form>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-log-reg\" style=\"padding-left: 0px\">\r\n          <a @click=\"isLogin = !isLogin\">Sign in</a>\r\n        </div>\r\n      </v-card>\r\n    </v-dialog>\r\n    <v-snackbar color=\"red\" v-model=\"alert\" :timeout=\"timeout\">{{ text }}</v-snackbar>\r\n    <v-snackbar color=\"green\" v-model=\"alertCreate\" :timeout=\"timeout\">{{ textCreate }}</v-snackbar>\r\n    <v-snackbar color=\"red\" v-model=\"alertCreateError\" :timeout=\"timeout\">{{ textCreateError }}</v-snackbar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { APIService } from \"../APIService\";\r\nconst apiService = new APIService();\r\n\r\nexport default {\r\n  name: \"home\",\r\n  props: {\r\n    dataSuccessMessage: {\r\n      type: String\r\n    }\r\n  },\r\n  data() {\r\n    var validatePass = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password\"));\r\n      } else {\r\n        if (this.ruleForm1.checkPass !== \"\") {\r\n          callback();\r\n        }\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass2 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password again\"));\r\n      } else if (value !== this.ruleForm1.pass) {\r\n        callback(new Error(\"The inputs don't match!\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    var validatePass3 = (rule, value, callback) => {\r\n      if (value === \"\") {\r\n        callback(new Error(\"Please input the password\"));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      headers: [\r\n        {\r\n          src: \"/img/man.svg\",\r\n          header: \"For learners\",\r\n          text:\r\n            \"Either you are a student or a technology enthusiast, Bioblocks allows you to create experiments with minimal knowledge\"\r\n        },\r\n        {\r\n          src: \"/img/team.svg\",\r\n          header: \"Cooperative Work\",\r\n          text: \"Start working in a project with other people simultaneously\"\r\n        },\r\n        {\r\n          src: \"/img/presentation.svg\",\r\n          header: \"Experiment in class\",\r\n          text:\r\n            \"Create projects for your class. Bioblocks allows students to work on challenges with the teacher supervision\"\r\n        }\r\n      ],\r\n      showCard: false,\r\n      isLogin: true,\r\n      alert: false,\r\n      alertCreate: false,\r\n      alertCreateError: false,\r\n      timeout: 4000,\r\n      text: \"Incorrect username/password\",\r\n      textCreate: \"Account created\",\r\n      textCreateError: \"Username already exists\",\r\n      labelPosition: \"top\",\r\n      ruleForm: {\r\n        name: \"\",\r\n        pass: \"\"\r\n      },\r\n      ruleForm1: {\r\n        fullName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        userType: \"\",\r\n        pass: \"\",\r\n        checkPass: \"\"\r\n      },\r\n      rules3: {\r\n        name: [\r\n          {\r\n            required: true,\r\n            message: \"Please input Username or Email\",\r\n            trigger: \"blur\"\r\n          }\r\n        ],\r\n        pass: [{ validator: validatePass3, trigger: \"blur\" }]\r\n      },\r\n      rules1: {\r\n        fullName: [\r\n          { required: true, message: \"Please input Full name\", trigger: \"blur\" }\r\n        ],\r\n        username: [\r\n          { required: true, message: \"Please input Username\", trigger: \"blur\" }\r\n        ],\r\n        userType: [\r\n          { required: true, message: \"Please input User type\", trigger: \"blur\" }\r\n        ],\r\n        email: [\r\n          { required: true, message: \"Please input Email\", trigger: \"blur\" },\r\n          {\r\n            type: \"email\",\r\n            message: \"Please input correct email address\",\r\n            trigger: [\"blur\", \"change\"]\r\n          }\r\n        ],\r\n        pass: [{ validator: validatePass, trigger: \"blur\" }],\r\n        checkPass: [{ validator: validatePass2, trigger: \"blur\" }]\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    signIn(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            username: this.ruleForm.name,\r\n            password: this.ruleForm.pass\r\n          };\r\n          apiService.signIn(info).then(result => {\r\n            if (result.data.success) {\r\n              this.$router.go(\"/profile\");\r\n            } else if (!this.alert) {\r\n              this.alert = !this.alert;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    },\r\n    signUp(formName) {\r\n      this.$refs[formName].validate(valid => {\r\n        if (valid) {\r\n          var info = {\r\n            fullName: this.ruleForm1.fullName,\r\n            username: this.ruleForm1.username,\r\n            password: this.ruleForm1.pass,\r\n            email: this.ruleForm1.email,\r\n            userType: this.ruleForm1.userType\r\n          };\r\n          apiService.signUp(info).then(result => {\r\n            if (result.data.success) {\r\n              this.isLogin = !this.isLogin;\r\n              this.alertCreate = !this.alertCreate;\r\n            } else if (!this.alertCreateError) {\r\n              this.alertCreateError = !this.alertCreateError;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.el-button.successB {\r\n  background: #00d994;\r\n  border-color: #00d994;\r\n  border-radius: 20px;\r\n  color: #192440;\r\n  font-weight: bold;\r\n}\r\n.el-button:hover.successB {\r\n  background: #00d994;\r\n  border-color: #00d994;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n.el-button.danger {\r\n  background: #f44336;\r\n  border-color: #f44336;\r\n  border-radius: 20px;\r\n  color: #192440;\r\n  font-weight: bold;\r\n}\r\n.el-button:hover.danger {\r\n  background: #f44336;\r\n  border-color: #f44336;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"]}]}