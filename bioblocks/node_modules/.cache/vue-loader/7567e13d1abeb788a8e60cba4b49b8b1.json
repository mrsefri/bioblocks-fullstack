{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Home.vue?vue&type=template&id=8dc7cce2&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Home.vue","mtime":1557585682790},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticStyle: { height: \"100%\" } },\n    [\n      _c(\n        \"div\",\n        { staticStyle: { height: \"100%\" } },\n        [\n          _c(\"div\", { staticClass: \"landing-page\" }, [\n            _c(\"div\", [\n              _c(\"h1\", [\n                _vm._v(\"A new way to program, easy, simple and intuitive\")\n              ]),\n              _c(\n                \"span\",\n                {\n                  staticClass: \"landing-text-big\",\n                  staticStyle: { position: \"relative\", top: \"25%\" }\n                },\n                [\n                  _vm._v(\n                    \"With Bioblocks you will program with visual blocks, without needing to know code\"\n                  )\n                ]\n              ),\n              _c(\n                \"span\",\n                {\n                  staticClass: \"landing-text-big\",\n                  staticStyle: { position: \"relative\", \"margin-top\": \"2%\" }\n                },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"successB\",\n                      on: {\n                        click: function($event) {\n                          _vm.showCard = !_vm.showCard\n                        }\n                      }\n                    },\n                    [_vm._v(\"Try Out!\")]\n                  )\n                ],\n                1\n              )\n            ])\n          ]),\n          _c(\n            \"v-layout\",\n            {\n              staticStyle: { margin: \"0 auto\" },\n              attrs: { \"align-center\": \"\", \"justify-center\": \"\", row: \"\" }\n            },\n            _vm._l(_vm.headers, function(i) {\n              return _c(\n                \"div\",\n                {\n                  key: i,\n                  staticClass: \"homeItem\",\n                  staticStyle: { \"margin-top\": \"2%\", margin: \"3%\" }\n                },\n                [\n                  _c(\"img\", {\n                    attrs: { src: i.src, width: \"50%\", height: \"50%\" }\n                  }),\n                  _c(\"h1\", { staticClass: \"landing-text-headers\" }, [\n                    _vm._v(_vm._s(i.header))\n                  ]),\n                  _c(\"span\", [_vm._v(_vm._s(i.text))])\n                ]\n              )\n            }),\n            0\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-dialog\",\n        {\n          attrs: { width: \"300px\" },\n          model: {\n            value: _vm.showCard,\n            callback: function($$v) {\n              _vm.showCard = $$v\n            },\n            expression: \"showCard\"\n          }\n        },\n        [\n          _vm.isLogin\n            ? _c(\"v-card\", { staticStyle: { background: \"white\" } }, [\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"login-border\",\n                    staticStyle: {\n                      display: \"block\",\n                      \"margin-left\": \"auto\",\n                      \"margin-right\": \"auto\"\n                    }\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      { staticClass: \"login-width\" },\n                      [\n                        _c(\n                          \"el-form\",\n                          {\n                            ref: \"ruleForm\",\n                            staticClass: \"demo-ruleForm\",\n                            attrs: {\n                              model: _vm.ruleForm,\n                              \"status-icon\": \"\",\n                              rules: _vm.rules3,\n                              \"label-width\": \"120px\",\n                              \"label-position\": _vm.labelPosition\n                            }\n                          },\n                          [\n                            _c(\n                              \"el-form-item\",\n                              {\n                                attrs: {\n                                  label: \"Username or Email \",\n                                  prop: \"name\"\n                                }\n                              },\n                              [\n                                _c(\"el-input\", {\n                                  attrs: { placeholder: \"\" },\n                                  nativeOn: {\n                                    keyup: function($event) {\n                                      if (\n                                        !$event.type.indexOf(\"key\") &&\n                                        _vm._k(\n                                          $event.keyCode,\n                                          \"enter\",\n                                          13,\n                                          $event.key,\n                                          \"Enter\"\n                                        )\n                                      ) {\n                                        return null\n                                      }\n                                      return _vm.signIn(\"ruleForm\")\n                                    }\n                                  },\n                                  model: {\n                                    value: _vm.ruleForm.name,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.ruleForm, \"name\", $$v)\n                                    },\n                                    expression: \"ruleForm.name\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-form-item\",\n                              { attrs: { label: \"Password\", prop: \"pass\" } },\n                              [\n                                _c(\"el-input\", {\n                                  attrs: {\n                                    type: \"password\",\n                                    autocomplete: \"off\"\n                                  },\n                                  nativeOn: {\n                                    keyup: function($event) {\n                                      if (\n                                        !$event.type.indexOf(\"key\") &&\n                                        _vm._k(\n                                          $event.keyCode,\n                                          \"enter\",\n                                          13,\n                                          $event.key,\n                                          \"Enter\"\n                                        )\n                                      ) {\n                                        return null\n                                      }\n                                      return _vm.signIn(\"ruleForm\")\n                                    }\n                                  },\n                                  model: {\n                                    value: _vm.ruleForm.pass,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.ruleForm, \"pass\", $$v)\n                                    },\n                                    expression: \"ruleForm.pass\"\n                                  }\n                                })\n                              ],\n                              1\n                            ),\n                            _c(\n                              \"el-form-item\",\n                              [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    staticClass: \"successB\",\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.signIn(\"ruleForm\")\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"Sing In\")]\n                                )\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-log-reg\",\n                    staticStyle: { \"padding-left\": \"0px\" }\n                  },\n                  [\n                    _c(\n                      \"a\",\n                      {\n                        on: {\n                          click: function($event) {\n                            _vm.isLogin = !_vm.isLogin\n                          }\n                        }\n                      },\n                      [_vm._v(\"Create an account\")]\n                    )\n                  ]\n                )\n              ])\n            : _vm._e(),\n          !_vm.isLogin\n            ? _c(\"v-card\", { staticStyle: { background: \"white\" } }, [\n                _c(\"div\", { staticClass: \"login-border\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"login-width\" },\n                    [\n                      _c(\n                        \"el-form\",\n                        {\n                          ref: \"ruleForm1\",\n                          staticClass: \"demo-ruleForm1\",\n                          attrs: {\n                            model: _vm.ruleForm1,\n                            \"status-icon\": \"\",\n                            rules: _vm.rules1,\n                            \"label-width\": \"120px\",\n                            \"label-position\": _vm.labelPosition\n                          }\n                        },\n                        [\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"Full name\", prop: \"fullName\" } },\n                            [\n                              _c(\"el-input\", {\n                                model: {\n                                  value: _vm.ruleForm1.fullName,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.ruleForm1, \"fullName\", $$v)\n                                  },\n                                  expression: \"ruleForm1.fullName\"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"Username\", prop: \"username\" } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: { placeholder: \"username\" },\n                                model: {\n                                  value: _vm.ruleForm1.username,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.ruleForm1, \"username\", $$v)\n                                  },\n                                  expression: \"ruleForm1.username\"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"Email\", prop: \"email\" } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: { placeholder: \"you@example.com\" },\n                                model: {\n                                  value: _vm.ruleForm1.email,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.ruleForm1, \"email\", $$v)\n                                  },\n                                  expression: \"ruleForm1.email\"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"User type\", prop: \"userType\" } },\n                            [\n                              _c(\n                                \"el-select\",\n                                {\n                                  model: {\n                                    value: _vm.ruleForm1.userType,\n                                    callback: function($$v) {\n                                      _vm.$set(_vm.ruleForm1, \"userType\", $$v)\n                                    },\n                                    expression: \"ruleForm1.userType\"\n                                  }\n                                },\n                                [\n                                  _c(\"el-option\", {\n                                    attrs: {\n                                      label: \"Student\",\n                                      value: \"student\"\n                                    }\n                                  }),\n                                  _c(\"el-option\", {\n                                    attrs: {\n                                      label: \"Professor\",\n                                      value: \"professor\"\n                                    }\n                                  }),\n                                  _c(\"el-option\", {\n                                    attrs: {\n                                      label: \"Standard\",\n                                      value: \"standard\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"Password\", prop: \"pass\" } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  type: \"password\",\n                                  autocomplete: \"off\"\n                                },\n                                model: {\n                                  value: _vm.ruleForm1.pass,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.ruleForm1, \"pass\", $$v)\n                                  },\n                                  expression: \"ruleForm1.pass\"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            { attrs: { label: \"Confirm\", prop: \"checkPass\" } },\n                            [\n                              _c(\"el-input\", {\n                                attrs: {\n                                  type: \"password\",\n                                  autocomplete: \"off\"\n                                },\n                                model: {\n                                  value: _vm.ruleForm1.checkPass,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.ruleForm1, \"checkPass\", $$v)\n                                  },\n                                  expression: \"ruleForm1.checkPass\"\n                                }\n                              })\n                            ],\n                            1\n                          ),\n                          _c(\n                            \"el-form-item\",\n                            [\n                              _c(\n                                \"el-button\",\n                                {\n                                  staticClass: \"successB\",\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.signUp(\"ruleForm1\")\n                                    }\n                                  }\n                                },\n                                [_vm._v(\"Sing Up\")]\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ]),\n                _c(\n                  \"div\",\n                  {\n                    staticClass: \"form-log-reg\",\n                    staticStyle: { \"padding-left\": \"0px\" }\n                  },\n                  [\n                    _c(\n                      \"a\",\n                      {\n                        on: {\n                          click: function($event) {\n                            _vm.isLogin = !_vm.isLogin\n                          }\n                        }\n                      },\n                      [_vm._v(\"Sign in\")]\n                    )\n                  ]\n                )\n              ])\n            : _vm._e()\n        ],\n        1\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"red\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alert,\n            callback: function($$v) {\n              _vm.alert = $$v\n            },\n            expression: \"alert\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.text))]\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"green\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alertCreate,\n            callback: function($$v) {\n              _vm.alertCreate = $$v\n            },\n            expression: \"alertCreate\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.textCreate))]\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"red\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alertCreateError,\n            callback: function($$v) {\n              _vm.alertCreateError = $$v\n            },\n            expression: \"alertCreateError\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.textCreateError))]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}