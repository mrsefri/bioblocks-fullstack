{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Register.vue?vue&type=template&id=7bf3755a&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Register.vue","mtime":1555272080326},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"login-form\", staticStyle: { \"margin-top\": \"5%\" } },\n    [\n      _c(\"div\", { staticClass: \"login-border\" }, [\n        _c(\"h2\", [_vm._v(\"Register\")]),\n        _c(\n          \"div\",\n          { staticClass: \"login-width\" },\n          [\n            _c(\n              \"el-form\",\n              {\n                ref: \"ruleForm1\",\n                staticClass: \"demo-ruleForm1\",\n                attrs: {\n                  model: _vm.ruleForm1,\n                  \"status-icon\": \"\",\n                  rules: _vm.rules1,\n                  \"label-width\": \"120px\",\n                  \"label-position\": _vm.labelPosition\n                }\n              },\n              [\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"Full name\", prop: \"fullName\" } },\n                  [\n                    _c(\"el-input\", {\n                      model: {\n                        value: _vm.ruleForm1.fullName,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm1, \"fullName\", $$v)\n                        },\n                        expression: \"ruleForm1.fullName\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"Username\", prop: \"username\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"username\" },\n                      model: {\n                        value: _vm.ruleForm1.username,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm1, \"username\", $$v)\n                        },\n                        expression: \"ruleForm1.username\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"Email\", prop: \"email\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { placeholder: \"you@example.com\" },\n                      model: {\n                        value: _vm.ruleForm1.email,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm1, \"email\", $$v)\n                        },\n                        expression: \"ruleForm1.email\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"User type\", prop: \"userType\" } },\n                  [\n                    _c(\n                      \"el-select\",\n                      {\n                        model: {\n                          value: _vm.ruleForm1.userType,\n                          callback: function($$v) {\n                            _vm.$set(_vm.ruleForm1, \"userType\", $$v)\n                          },\n                          expression: \"ruleForm1.userType\"\n                        }\n                      },\n                      [\n                        _c(\"el-option\", {\n                          attrs: { label: \"Student\", value: \"student\" }\n                        }),\n                        _c(\"el-option\", {\n                          attrs: { label: \"Professor\", value: \"professor\" }\n                        }),\n                        _c(\"el-option\", {\n                          attrs: { label: \"Standard\", value: \"standard\" }\n                        })\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"Password\", prop: \"pass\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { type: \"password\", autocomplete: \"off\" },\n                      model: {\n                        value: _vm.ruleForm1.pass,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm1, \"pass\", $$v)\n                        },\n                        expression: \"ruleForm1.pass\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  { attrs: { label: \"Confirm\", prop: \"checkPass\" } },\n                  [\n                    _c(\"el-input\", {\n                      attrs: { type: \"password\", autocomplete: \"off\" },\n                      model: {\n                        value: _vm.ruleForm1.checkPass,\n                        callback: function($$v) {\n                          _vm.$set(_vm.ruleForm1, \"checkPass\", $$v)\n                        },\n                        expression: \"ruleForm1.checkPass\"\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"el-form-item\",\n                  [\n                    _c(\n                      \"el-button\",\n                      {\n                        attrs: { type: \"success\" },\n                        on: {\n                          click: function($event) {\n                            return _vm.signUp(\"ruleForm1\")\n                          }\n                        }\n                      },\n                      [_vm._v(\"Sing Up\")]\n                    )\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ],\n          1\n        )\n      ]),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { timeout: _vm.timeout },\n          model: {\n            value: _vm.alert,\n            callback: function($$v) {\n              _vm.alert = $$v\n            },\n            expression: \"alert\"\n          }\n        },\n        [\n          _vm._v(\"\\n    \" + _vm._s(_vm.text) + \"\\n    \"),\n          _c(\n            \"v-btn\",\n            {\n              attrs: { dark: \"\", flat: \"\" },\n              on: {\n                click: function($event) {\n                  _vm.alert = false\n                }\n              }\n            },\n            [_vm._v(\"Close\")]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}