{"remainingRequest":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Project.vue?vue&type=template&id=5dd84899&","dependencies":[{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\src\\components\\Project.vue","mtime":1557588505584},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\noest\\Desktop\\fullstack\\bioblocks\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-app\",\n    { staticStyle: { position: \"relative\", top: \"7%\" } },\n    [\n      _vm.editing\n        ? _c(\n            \"v-btn\",\n            {\n              staticStyle: { margin: \"2%\" },\n              attrs: { icon: \"\" },\n              on: {\n                click: function($event) {\n                  _vm.editing = !_vm.editing\n                }\n              }\n            },\n            [_c(\"v-icon\", [_vm._v(\"first_page\")])],\n            1\n          )\n        : _vm._e(),\n      _vm.editing\n        ? _c(\n            \"el-form\",\n            {\n              ref: \"ruleForm1\",\n              staticClass: \"newform\",\n              staticStyle: { \"margin-top\": \"10%\" },\n              attrs: {\n                model: _vm.ruleForm1,\n                rules: _vm.namesRules,\n                \"lazy-validation\": \"\"\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { prop: \"project_name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { disabled: !_vm.isEditing },\n                    nativeOn: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.create(\"ruleForm1\")\n                      }\n                    },\n                    model: {\n                      value: _vm.ruleForm1.project_name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm1, \"project_name\", $$v)\n                      },\n                      expression: \"ruleForm1.project_name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { prop: \"project_group\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: {\n                      disabled: !_vm.isEditing,\n                      placeholder: \"Id of the group related\"\n                    },\n                    nativeOn: {\n                      keyup: function($event) {\n                        if (\n                          !$event.type.indexOf(\"key\") &&\n                          _vm._k(\n                            $event.keyCode,\n                            \"enter\",\n                            13,\n                            $event.key,\n                            \"Enter\"\n                          )\n                        ) {\n                          return null\n                        }\n                        return _vm.create(\"ruleForm1\")\n                      }\n                    },\n                    model: {\n                      value: _vm.ruleForm1.project_group,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm1, \"project_group\", $$v)\n                      },\n                      expression: \"ruleForm1.project_group\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\"el-checkbox\", {\n                    attrs: {\n                      label: \"Public project\",\n                      name: \"type\",\n                      disabled: !_vm.isEditing\n                    },\n                    model: {\n                      value: _vm.ruleForm1.public,\n                      callback: function($$v) {\n                        _vm.$set(_vm.ruleForm1, \"public\", $$v)\n                      },\n                      expression: \"ruleForm1.public\"\n                    }\n                  })\n                ],\n                1\n              ),\n              !_vm.isEditing\n                ? _c(\n                    \"el-form-item\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          staticClass: \"successB\",\n                          staticStyle: { \"margin-right\": \"5%\" },\n                          on: {\n                            click: function($event) {\n                              _vm.isEditing = !_vm.isEditing\n                            }\n                          }\n                        },\n                        [_vm._v(\"Edit\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          staticClass: \"danger\",\n                          staticStyle: { \"margin-left\": \"5%\" },\n                          on: {\n                            click: function($event) {\n                              _vm.deleting = !_vm.deleting\n                            }\n                          }\n                        },\n                        [_vm._v(\"Delete project\")]\n                      ),\n                      _c(\n                        \"v-dialog\",\n                        {\n                          attrs: { width: \"350px\" },\n                          model: {\n                            value: _vm.deleting,\n                            callback: function($$v) {\n                              _vm.deleting = $$v\n                            },\n                            expression: \"deleting\"\n                          }\n                        },\n                        [\n                          _c(\"v-card\", { staticStyle: { height: \"250px\" } }, [\n                            _c(\n                              \"h1\",\n                              {\n                                staticStyle: {\n                                  \"font-size\": \"16px\",\n                                  padding: \"10%\"\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n            Are you sure?\\n            \"\n                                ),\n                                _c(\"br\"),\n                                _vm._v(\n                                  \"Once deleted, the project can't be restored\\n          \"\n                                )\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              [\n                                _c(\n                                  \"el-button\",\n                                  {\n                                    staticClass: \"danger\",\n                                    staticStyle: { \"margin-top\": \"5%\" },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.deleteProject()\n                                      }\n                                    }\n                                  },\n                                  [_vm._v(\"Delete\")]\n                                )\n                              ],\n                              1\n                            )\n                          ])\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e(),\n              _vm.isEditing\n                ? _c(\n                    \"el-form-item\",\n                    [\n                      _c(\n                        \"el-button\",\n                        {\n                          staticStyle: { \"margin-right\": \"5%\" },\n                          attrs: { type: \"default\" },\n                          on: {\n                            click: function($event) {\n                              _vm.isEditing = !_vm.isEditing\n                              _vm.ruleForm1.project_name =\n                                _vm.dataProject.dataname\n                              _vm.ruleForm1.public = _vm.dataProject.datapublic\n                              _vm.ruleForm1.project_group =\n                                _vm.dataProject.dataproject_group\n                            }\n                          }\n                        },\n                        [_vm._v(\"Cancel\")]\n                      ),\n                      _c(\n                        \"el-button\",\n                        {\n                          staticClass: \"successB\",\n                          staticStyle: { \"margin-left\": \"5%\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.editProject(\"ruleForm1\")\n                            }\n                          }\n                        },\n                        [_vm._v(\"Save\")]\n                      )\n                    ],\n                    1\n                  )\n                : _vm._e()\n            ],\n            1\n          )\n        : _vm._e(),\n      _c(\"Bioblocks\", {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: !_vm.editing,\n            expression: \"!editing\"\n          }\n        ],\n        attrs: {\n          methodSave: _vm.saveProject,\n          methodAdd: _vm.addUser,\n          methodEdit: _vm.switchEdit,\n          dataxml: this.dataProject.dataxml,\n          isOwner: this.dataProject.isOwner\n        }\n      }),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"green\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alert,\n            callback: function($$v) {\n              _vm.alert = $$v\n            },\n            expression: \"alert\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.text))]\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"green\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alertAdd,\n            callback: function($$v) {\n              _vm.alertAdd = $$v\n            },\n            expression: \"alertAdd\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.textAdd))]\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"red\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alertAddError,\n            callback: function($$v) {\n              _vm.alertAddError = $$v\n            },\n            expression: \"alertAddError\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.textAddError))]\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"green\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alertEdit,\n            callback: function($$v) {\n              _vm.alertEdit = $$v\n            },\n            expression: \"alertEdit\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.textEdit))]\n      ),\n      _c(\n        \"v-snackbar\",\n        {\n          attrs: { color: \"red\", timeout: _vm.timeout },\n          model: {\n            value: _vm.alertEditError,\n            callback: function($$v) {\n              _vm.alertEditError = $$v\n            },\n            expression: \"alertEditError\"\n          }\n        },\n        [_vm._v(_vm._s(_vm.textEditError))]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}